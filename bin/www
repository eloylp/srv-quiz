#!/usr/bin/env node

'use strict';

/**
 * Module dependencies.
 */

const debug = require("debug")('srv-quiz:server');
const http = require("http");
const app = require("../app");


app.then(function (app) {

    const server = http.createServer(app);

    let onError = function (error) {
        if (error.syscall !== 'listen') {
            throw error;
        }

        let bind = typeof port === 'string'
            ? 'Pipe ' + port
            : 'Port ' + port;

        // handle specific listen errors with friendly messages
        switch (error.code) {
            case 'EACCES':
                console.error(bind + ' requires elevated privileges');
                process.exit(1);
                break;
            case 'EADDRINUSE':
                console.error(bind + ' is already in use');
                process.exit(1);
                break;
            default:
                throw error;
        }
    }

    let onListening = function () {
        let address = server.address();
        let bind = typeof address === 'string'
            ? 'pipe ' + address
            : 'port ' + address.port;
        debug('Listening on ' + bind);
    }

    server.listen(app.get('port'));
    server.on('error', onError);
    server.on('listening', onListening);
});



